apply plugin: 'java'
apply plugin:'application'

group = 'co.fizzed'
applicationName = 'fizzed-otter'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8

defaultTasks('run')

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

allprojects {
    tasks.withType(JavaCompile) {
        // false for better comparison...
        options.incremental = false
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile("org.zeroturnaround:zt-exec:1.7")
    compile("org.apache.ivy:ivy:2.4.0-rc1")
    compile("ch.qos.logback:logback-classic:1.1.2")
    compile("co.fizzed:fizzed-stork-launcher:1.2.0-SNAPSHOT")
    testCompile("junit:junit:4.+")
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task copyLibsToLib(type: Copy) {
    from "$buildDir/libs"
    into "$buildDir/stork/lib"
}

task copyDependenciesToLib(type: Copy) {
    from configurations.runtime
    into "$buildDir/stork/lib"
}

task storkify(type: Exec) {
   workingDir '../java-stork/cli/target/stork/bin' 
   executable 'stork-launcher-generate'
   args = ['-o', file("$buildDir/stork"), '-i', file('src/main/launchers')]  
}

task stage(dependsOn: ['jar','copyLibsToLib','copyDependenciesToLib','storkify'])
stage.mustRunAfter jar

task runIt(type:JavaExec) {
   main = 'co.fizzed.otter.cli.OtterMain'
   classpath = sourceSets.main.runtimeClasspath
   args = ['test']  
}

task runIvy(type:JavaExec) {
   main = 'co.fizzed.otter.cli.IvyMain'
   classpath = sourceSets.main.runtimeClasspath
   //args = ['test']  
}

task runStaged(type: Exec, dependsOn: ['stage']) {
   executable 'build/stork/bin/otter'
   args = ['compile']  
}

